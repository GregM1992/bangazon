// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace bangazonBE.Migrations
{
    [DbContext(typeof(bangazonBEDbContext))]
    [Migration("20240222003244_updatedMigrations3")]
    partial class updatedMigrations3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("bangazonBE.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Tools"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Appliances"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Home/Office"
                        });
                });

            modelBuilder.Entity("bangazonBE.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("customerId")
                        .HasColumnType("integer");

                    b.Property<bool>("isComplete")
                        .HasColumnType("boolean");

                    b.Property<int>("paymentTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            customerId = 1,
                            isComplete = false,
                            paymentTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            customerId = 2,
                            isComplete = false,
                            paymentTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            customerId = 2,
                            isComplete = true,
                            paymentTypeId = 2
                        });
                });

            modelBuilder.Entity("bangazonBE.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            type = "Credit"
                        },
                        new
                        {
                            Id = 2,
                            type = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            type = "Check"
                        });
                });

            modelBuilder.Entity("bangazonBE.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("categoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("pricePerUnit")
                        .HasColumnType("numeric");

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("quantityAvailable")
                        .HasColumnType("integer");

                    b.Property<int>("sellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            categoryId = 1,
                            pricePerUnit = 2.00m,
                            productName = "bottle",
                            quantityAvailable = 4,
                            sellerId = 1
                        },
                        new
                        {
                            Id = 2,
                            categoryId = 1,
                            pricePerUnit = 3.23m,
                            productName = "mug",
                            quantityAvailable = 3,
                            sellerId = 1
                        },
                        new
                        {
                            Id = 3,
                            categoryId = 3,
                            pricePerUnit = 1.00m,
                            productName = "sharpie",
                            quantityAvailable = 2,
                            sellerId = 2
                        },
                        new
                        {
                            Id = 4,
                            categoryId = 1,
                            pricePerUnit = 2.00m,
                            productName = "screwdriver",
                            quantityAvailable = 2,
                            sellerId = 1
                        },
                        new
                        {
                            Id = 5,
                            categoryId = 3,
                            pricePerUnit = 12.00m,
                            productName = "stapler",
                            quantityAvailable = 3,
                            sellerId = 1
                        },
                        new
                        {
                            Id = 6,
                            categoryId = 2,
                            pricePerUnit = 200.00m,
                            productName = "microwave",
                            quantityAvailable = 12,
                            sellerId = 2
                        });
                });

            modelBuilder.Entity("bangazonBE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isSeller")
                        .HasColumnType("boolean");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("uId")
                        .HasColumnType("text");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            address = "2004 Nashville St. Nashville",
                            email = "myemail.com",
                            firstName = "Gregory",
                            isSeller = true,
                            lastName = "Markus",
                            uId = "jsUn6Bt9QFWVaLvZMFUyN8hygCH2",
                            userName = "gregGroks13"
                        },
                        new
                        {
                            Id = 2,
                            address = "102 theway dr.",
                            email = "email2.com",
                            firstName = "Joe",
                            isSeller = true,
                            lastName = "Guy",
                            userName = "username2"
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("ordersId")
                        .HasColumnType("integer");

                    b.Property<int>("productsId")
                        .HasColumnType("integer");

                    b.HasKey("ordersId", "productsId");

                    b.HasIndex("productsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("bangazonBE.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("ordersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bangazonBE.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("productsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
