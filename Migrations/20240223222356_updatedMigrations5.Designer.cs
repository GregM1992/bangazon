// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace bangazonBE.Migrations
{
    [DbContext(typeof(bangazonBEDbContext))]
    [Migration("20240223222356_updatedMigrations5")]
    partial class updatedMigrations5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("bangazonBE.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Tools"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Appliances"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Home/Office"
                        });
                });

            modelBuilder.Entity("bangazonBE.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            IsComplete = false,
                            PaymentTypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            IsComplete = false,
                            PaymentTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 2,
                            IsComplete = true,
                            PaymentTypeId = 2
                        });
                });

            modelBuilder.Entity("bangazonBE.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Credit"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Cash"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Check"
                        });
                });

            modelBuilder.Entity("bangazonBE.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<decimal>("PricePerUnit")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            PricePerUnit = 2.00m,
                            ProductName = "bottle",
                            QuantityAvailable = 4,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            PricePerUnit = 3.23m,
                            ProductName = "mug",
                            QuantityAvailable = 3,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            PricePerUnit = 1.00m,
                            ProductName = "sharpie",
                            QuantityAvailable = 2,
                            SellerId = 2
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            PricePerUnit = 2.00m,
                            ProductName = "screwdriver",
                            QuantityAvailable = 2,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            PricePerUnit = 12.00m,
                            ProductName = "stapler",
                            QuantityAvailable = 3,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            PricePerUnit = 200.00m,
                            ProductName = "microwave",
                            QuantityAvailable = 12,
                            SellerId = 2
                        });
                });

            modelBuilder.Entity("bangazonBE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSeller")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "2004 Nashville St. Nashville",
                            Email = "myemail.com",
                            FirstName = "Gregory",
                            IsSeller = true,
                            LastName = "Markus",
                            Uid = "jsUn6Bt9QFWVaLvZMFUyN8hygCH2",
                            UserName = "gregGroks13"
                        },
                        new
                        {
                            Id = 2,
                            Address = "102 theway dr.",
                            Email = "email2.com",
                            FirstName = "Joe",
                            IsSeller = true,
                            LastName = "Guy",
                            UserName = "username2"
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct", (string)null);
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("bangazonBE.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bangazonBE.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
